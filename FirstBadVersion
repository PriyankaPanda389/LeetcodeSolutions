# brute force approach
#take each element and run the api given on each element and if the api returns true, return the corresponding index
class Solution:
    def firstBadVersion(self, n: int) -> int:
        for i in range(n+1):
            if isBadVersion(i):
                return i
                
 #a better approach with O(logn) complexity using binary search
 class Solution:
class Solution:
    def firstBadVersion(self, n: int) -> int:
        left=0
        right=n
        while(left<=right):
            mid=(left + right)//2
            if isBadVersion(mid) == False:
                # start looking at the right part of the array
                left=mid+1
            else:
                # else if api call returns True ,start looking at the left part of the array
                right=mid-1
                ans=mid
        return ans
                
                
